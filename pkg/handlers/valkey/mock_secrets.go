// Code generated by mockery v2.53.2. DO NOT EDIT.

package valkey

import (
	context "context"

	aiven_nais_io_v1 "github.com/nais/liberator/pkg/apis/aiven.nais.io/v1"

	logrus "github.com/sirupsen/logrus"

	mock "github.com/stretchr/testify/mock"

	v1 "k8s.io/api/core/v1"
)

// MockSecrets is an autogenerated mock type for the Secrets type
type MockSecrets struct {
	mock.Mock
}

type MockSecrets_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSecrets) EXPECT() *MockSecrets_Expecter {
	return &MockSecrets_Expecter{mock: &_m.Mock}
}

// InitSecret provides a mock function with given fields: ctx, namespace, spec, logger
func (_m *MockSecrets) InitSecret(ctx context.Context, namespace string, spec *aiven_nais_io_v1.ValkeySpec, logger logrus.FieldLogger) *v1.Secret {
	ret := _m.Called(ctx, namespace, spec, logger)

	if len(ret) == 0 {
		panic("no return value specified for InitSecret")
	}

	var r0 *v1.Secret
	if rf, ok := ret.Get(0).(func(context.Context, string, *aiven_nais_io_v1.ValkeySpec, logrus.FieldLogger) *v1.Secret); ok {
		r0 = rf(ctx, namespace, spec, logger)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.Secret)
		}
	}

	return r0
}

// MockSecrets_InitSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InitSecret'
type MockSecrets_InitSecret_Call struct {
	*mock.Call
}

// InitSecret is a helper method to define mock.On call
//   - ctx context.Context
//   - namespace string
//   - spec *aiven_nais_io_v1.ValkeySpec
//   - logger logrus.FieldLogger
func (_e *MockSecrets_Expecter) InitSecret(ctx interface{}, namespace interface{}, spec interface{}, logger interface{}) *MockSecrets_InitSecret_Call {
	return &MockSecrets_InitSecret_Call{Call: _e.mock.On("InitSecret", ctx, namespace, spec, logger)}
}

func (_c *MockSecrets_InitSecret_Call) Run(run func(ctx context.Context, namespace string, spec *aiven_nais_io_v1.ValkeySpec, logger logrus.FieldLogger)) *MockSecrets_InitSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*aiven_nais_io_v1.ValkeySpec), args[3].(logrus.FieldLogger))
	})
	return _c
}

func (_c *MockSecrets_InitSecret_Call) Return(_a0 *v1.Secret) *MockSecrets_InitSecret_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSecrets_InitSecret_Call) RunAndReturn(run func(context.Context, string, *aiven_nais_io_v1.ValkeySpec, logrus.FieldLogger) *v1.Secret) *MockSecrets_InitSecret_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSecrets creates a new instance of MockSecrets. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSecrets(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSecrets {
	mock := &MockSecrets{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
